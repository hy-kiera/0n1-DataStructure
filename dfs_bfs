// BAEKJOON 1260번
// 그래프를 DFS로 탐색한 결과와 BFS로 탐색한 결과를 출력하는 프로그램을 작성.
// 단, 방문할 수 있는 정점이 여러 개인 경우에는 정점 번호가 작은 것을 먼저 방문하고, 더 이상 방문할 수 있는 점이 없는 경우 종료한다.

// 입력
// 첫째 줄에 정점의 개수 N(1≤N≤1,000), 간선의 개수 M(1≤M≤10,000), 탐색을 시작할 정점의 번호 V가 주어진다.
// 다음 M개의 줄에는 간선이 연결하는 두 정점의 번호가 주어진다.
// 한 간선이 여러 번 주어질 수도 있는데, 간선이 하나만 있는 것으로 생각하면 된다.
// 입력으로 주어지는 간선은 양방향이다.

// 출력
// 첫째 줄에 DFS를 수행한 결과를, 그 다음 줄에는 BFS를 수행한 결과를 출력한다.
// V부터 방문된 점을 순서대로 출력하면 된다.

#include <cstdio>
#include <queue>

using namespace std;

int mat[1001][1001];  //입력 배열 저장고	

int n, m, v;
bool chk[1001];
bool chk2[1001];

void dfs(int s){
	chk[s]=true;
	printf("%d ",s);
	for(int i=1;i<=n;i++){
		if(mat[s][i]==1 && chk[i]==false){
			dfs(i);
		}
	}
}

void bfs(int s){
	queue <int> q;
	q.push(s);
	chk2[s]=true;
	while(!q.empty()){
		int x=q.front();
		printf("%d ",x);
		q.pop();
		for(int i=1;i<=n;i++){
			if(mat[x][i]==1 && chk2[i]==false){
				q.push(i);
				chk2[i]=true;
			}
		}
	}
}


int main(){
	scanf("%d %d %d", &n, &m, &v);

	for(int i=0;i<m;i++){
		int s, e;
		scanf("%d %d", &s, &e);
		mat[s][e]=1;
		mat[e][s]=1;
	}

	dfs(v);
	printf("\n");
	bfs(v);
	printf("\n");

	return 0;
}
