// BAEKJOON 2538번
// 눈금의 간격이 1인 M×N(M,N≤100)크기의 모눈종이가 있다.
// 이 모눈종이 위에 눈금에 맞추어 K개의 직사각형을 그릴 때, 이들 K개의 직사각형의 내부를 제외한 나머지 부분이 몇 개의 분리된 영역으로 나누어진다.
// M, N과 K 그리고 K개의 직사각형의 좌표가 주어질 때, K개의 직사각형 내부를 제외한 나머지 부분이 몇 개의 분리된 영역으로 나누어지는지, 그리고 분리된 각 영역의 넓이가 얼마인지를 구하기.

// 입력
// 첫째 줄에 M과 N, 그리고 K가 빈칸을 사이에 두고 차례로 주어진다.
// M, N, K는 모두 100 이하의 자연수이다.
// 둘째 줄부터 K개의 줄에는 한 줄에 하나씩 직사각형의 왼쪽 아래 꼭짓점의 x, y좌표값과 오른쪽 위 꼭짓점의 x, y좌표값이 빈칸을 사이에 두고 차례로 주어진다.
// 모눈종이의 왼쪽 꼭짓점의 좌표는 (0,0)이고, 오른쪽 위 꼭짓점의 좌표는(N,M)이다.
// 입력되는 K개의 직사각형들이 모눈종이 전체를 채우는 경우는 없다.

// 출력
// 첫째 줄에 분리되어 나누어지는 영역의 개수를 출력한다.
// 둘째 줄에는 각 영역의 넓이를 오름차순으로 정렬하여 빈칸을 사이에 두고 출력한다.

#include <cstdio>
#include <algorithm>
#include <queue>
#include <vector>

using namespace std;

int mat[501][501];  //	[y좌표][x좌표]
int h, w, k;
int sum, cnt;	

int dir[4][2]={{1,0},{-1,0},{0,1},{0,-1}};  //하 상 우 좌

void dfs(int y, int x){
	for(int i=0;i<4;i++){
		int yy=y+dir[i][0], xx=x+dir[i][1];
		if(yy<0 || yy>=h || xx<0 || xx>=w) continue;
		if(mat[yy][xx]==1){
			mat[yy][xx]=0;
			sum++;
			dfs(yy,xx);
		}
	}
}

int a, b, x, y;
vector <int> v;

int main(){
	scanf("%d %d %d",&h,&w,&k);

	for(int i=0;i<h;i++){
		for(int j=0;j<w;j++){
			mat[i][j]=1;
		}
	}

	for(int l=0;l<k;l++){
		scanf("%d %d %d %d", &a, &b, &x, &y);

		for(int i=b;i<y;i++){
			for(int j=a;j<x;j++){
				mat[i][j]=0;
			}
		}
	}

	for(int i=0;i<h;i++){
		for(int j=0;j<w;j++){
			if(mat[i][j]==1){

				sum=0;
				mat[i][j]=0;
				sum++;
				cnt++;
				dfs(i,j);
				v.push_back(sum);
			}
		}
	}
	sort(v.begin(), v.end());

	printf("%d\n", cnt);
	for(int i=0;i<v.size();i++){
		printf("%d ", v[i]);
	}


	return 0;
}
