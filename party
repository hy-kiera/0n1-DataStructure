#include <cstdio>
#include <queue>
#include <vector>
#include <algorithm>
#define INF 987654321

using namespace std;
int N, M, X; //학생 수(=마을 수), 단방향 도로 수, 모이는 마을 번호
vector <vector <pair<int, int> > > mat(20017);

vector<int> dijkstra(int s){
	priority_queue <pair<int,int>, vector <pair<int,int> >, greater<pair <int,int> > > pq; //가려는 점까지 드는 비용, 가려는 점
	pq.push(make_pair(0,s)); //처음 비용, 현재 위치한 점
	vector <int> dist(N+1, INF);
	dist[s]=0;
	while(!pq.empty()){
		int cost = pq.top().first, here = pq.top().second;
		pq.pop();
		if(dist[here]<cost) continue;
		for(int i=0;i<mat[here].size();i++){
			int nextcost= cost + mat[here][i].second;
			int there=mat[here][i].first;
			if(dist[there]>nextcost){
				dist[there]=nextcost;
				pq.push(make_pair(nextcost,there));
			}
		}
	}
	return dist;
}

int main(){
	scanf("%d %d %d", &N,&M,&X);

	for(int i=0;i<M;i++){
		int s, e, t;
		scanf("%d %d %d", &s,&e,&t);
		mat[s].push_back(make_pair(e,t));
	}

	vector <int> s2X;
	vector <int> X2s;
	vector <int> res;
	for(int i=1;i<=N;i++){
		s2X=dijkstra(i);
		X2s=dijkstra(X);

		res.push_back(s2X[X]+X2s[i]);
	}
	sort(res.begin(), res.end());

	printf("%d", res[N-1]);

	return 0;
}
